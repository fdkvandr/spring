db:
  username: ${username.value:postgres}
  password: pass
  pool:
    size: 12
    timeout: 10
  properties:
    first: 123
    second: 567
    third.value: Third
  pools:
    - size: 1
      timeout: 1
    - size: 2
      timeout: 2
    - size: 3
      timeout: 3
  driver: PostgresDriver
  url: postgres:5432
  hosts: localhost,127.0.0.1
spring.profiles.active: qa


logging:
  #  file:
  #    name: project.log
  #    path: /
  level:
    root: INFO
    org.springframework.jdbc.core: TRACE

ip: 109.94.25.235

server:
  port: 8081

spring:
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
    format:
      date: iso
  datasource:
    url: jdbc:postgresql://${ip}/spring_database
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    properties.hibernate:
      batch_size: 50
      show_sql: true
      format_sql: true
      hbm2ddl.auto: validate
    open-in-view: false
  messages:
    basename: messages
  servlet:
    multipart:
      max-request-size: 1000MB
      max-file-size: 1000MB
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: springclient
            authorization-grant-type: authorization_code
            client-secret: ZIW2dehQPaUkjvhpoTH2POz36PNyDFzY
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
#            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: http://${ip}:8080/realms/springrealm/protocol/openid-connect/auth
            token-uri: http://${ip}:8080/realms/springrealm/protocol/openid-connect/token
            user-info-uri: http://${ip}:8080/realms/springrealm/protocol/openid-connect/userinfo
            jwk-set-uri: http://${ip}:8080/realms/springrealm/protocol/openid-connect/certs
            user-name-attribute: preferred_username
            issuer-uri: http://${ip}:8080/realms/springrealm
springdoc:
  swagger-ui:
    oauth2-redirect-url: '{baseUrl}/login/oauth2/code/{registrationId}'
    oauth:
      client-id: springclient
      client-secret: ZIW2dehQPaUkjvhpoTH2POz36PNyDFzY
      scopes:
        - openid
        - profile
        - email